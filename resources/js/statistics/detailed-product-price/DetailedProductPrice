<template>

    <div>

        <div class="table-responsive">

            <div class="col-md-12 no-padding">
                <div class="col-md-8 col-xs-12 no-padding">
                    <select id="per-page-dropdown" v-model="filter.per_page" class="form-control inline-dropdown"
                            @change="filterResult">
                        <option value="5">5</option>
                        <option value="10">10</option>
                        <option value="20">20</option>
                        <option value="50">50</option>
                        <option value="100">100</option>
                        <option value="*">All</option>
                    </select>
                    &nbsp;
                    <select id="category-dropdown" v-model="filter.category_id" class="form-control inline-dropdown"
                            @change="filterResult">
                        <option value="">{{ $utils.t__('general', 'all') }} {{ $utils.t__('general', 'categories') }}</option>
                        <option v-for="category in categories" :value="category.id">{{ category.name }}</option>
                    </select>

                    <select id="product-dropdown" v-model="filter.product_id" class="form-control inline-dropdown"
                            @change="filterResult">
                        <option value="">{{ $utils.t__('general', 'all') }} {{ $utils.t__('general', 'products') }}</option>
                        <option v-for="product in filteredProducts" :value="product.id">{{ product.name }}</option>
                    </select>
                    &nbsp;
                </div>

                <div class="col-md-4 col-xs-12 no-padding" style="float: right">
                    <div class="input-group">
                        <input type="text" class="form-control" v-model="filter.search" @input="filterResult"
                               :placeholder="$utils.t__('general','search') + '...'">
                        <span class="input-group-addon"><i class="fa fa-search"></i></span>
                    </div>
                </div>
            </div>
            <br>
            <br>
            <br>
            <Loader v-if="isLoading"></Loader>
            <table v-for="result in results" class="table table-custom">
                <caption style="white-space: nowrap;">
                    <a style="color: #ccc; font-weight: 600; font-size: 18px;"
                       :href="baseurl + '/' + $utils.t__('routes', 'products')+ '/'+ result.id ">
                        {{ result.name }}
                    </a>
                    <hr style="border-top: 1px solid #414860; padding: 0">
                </caption>
                <thead>

                <tr>
                    <th class="header-red" width="40%">
                        <b v-html="$utils.tbl__('competitor', true)"></b>
                    </th>
                    <th class="header-purple " width="15%">
                        <b v-html="$utils.tbl__('old_price', true)"></b>
                    </th>
                    <th class="header-orange " width="15%">
                        <b v-html="$utils.tbl__('last_price_change', true)"></b>
                    </th>
                    <th class="header-red " width="15%">
                        <b v-html="$utils.tbl__('current_price', true)"></b>
                    </th>
                    <th class="header-green " width="12%">
                        <b v-html="$utils.tbl__('percentage_change', true)"></b>
                    </th>
                    <th width="3%">

                    </th>
                </tr>
                </thead>
                <tbody>
                <tr>
                    <td :data-label="$utils.t__('general', 'competitor')">
                        <div class="text-orange capital">
                            <a :href="baseurl + '/' + $utils.t__('routes', 'my-shop')">
                                <strong class="underline-on-hover">{{ $utils.t__('general','my_shop') }}</strong>
                            </a> -
                            <a :href="baseurl + '/' +$utils.t__('routes', 'products') + '/' + result.id">
                                <strong class="underline-on-hover">{{ getProductName(result.name) }}</strong>
                            </a>
                        </div>

                    </td>

                    <td :data-label="$utils.t__('general', 'old_price')" >
                        {{ $utils.formatMoney(result.amount) }}
                    </td>
                    <td :data-label="$utils.t__('general', 'last_price_change')" >
                        {{ formattedDate(result.fetched_at) }}
                    </td>
                    <td :data-label="$utils.t__('general', 'current_price')" >
                        -
                    </td>
                    <td :data-label="$utils.t__('general', 'percentage_change')" >
                        -
                    </td>
                    <td :data-label="$utils.t__('general', 'actions')">
                        <a :href="baseurl + '/' + $utils.t__('routes', 'products') + '/' + result.id">
                            <i class="fa fa-eye"></i>
                        </a>
                    </td>
                </tr>
                <tr v-if="result.bindings.length === 0">
                    <td colspan="6">
                        <a :href="baseurl + '/binding?product-id=' + result.id">
                            {{ $utils.t__('general', 'bind_message')}}
                        </a>
                    </td>
                </tr>
                <tr v-else v-for="r in result.bindings">
                    <td :data-label="$utils.t__('general', 'competitor')">
                        <div class="text-orange capital">
                            <a :href="baseurl + '/' +$utils.t__('routes', 'products') + '?compName=' + r.product.source.name.split(' ').join('||')">
                                <strong class="underline-on-hover">{{ r.product.source.name }}</strong>
                            </a> -
                            <a :href="baseurl + '/' +$utils.t__('routes', 'products') + '/' + r.product.id">
                                <strong class="underline-on-hover">{{ getProductName(r.product.name) }}</strong>
                            </a>

                        </div>
                    </td>

                    <td :data-label="$utils.t__('general', 'old_price')" >
                        {{ r.bound_product_old_price ? $utils.formatMoney(r.bound_product_old_price) : '-' }}
                    </td>
                    <td :data-label="$utils.t__('general', 'last_price_change')" >
                        {{ r.bound_product_old_price ? r.old_price_date : '-' }}
                    </td>
                    <td :data-label="$utils.t__('general', 'current_price')" >
                        {{ r.bound_product_current_price ? $utils.formatMoney(r.bound_product_current_price) : '-'}}
                    </td>
                    <td :data-label="$utils.t__('general', 'percentage_change')" >
                        <a :href="baseurl + '/' + $utils.t__('routes', 'products') + '/' + result.id   + r.product.source.name.split(' ').join('||')"
                           :class="getClassName(r.bound_product_price_change_percentage)">
                            {{ r.bound_product_price_change_percentage ? $utils.showVisualDifference(r.bound_product_price_change_percentage, true) :
                            '-'}}
                        </a>
                    </td>
                    <td :data-label="$utils.t__('general', 'actions')">
                        <a :href="baseurl + '/' + $utils.t__('routes', 'products') + '/' + result.id  +'?name='  + r.product.source.name.split(' ').join('||')">
                            <i class="fa fa-eye"></i>
                        </a>
                    </td>
                </tr>
                </tbody>

            </table>

            <pagination :pagination="pagination" :info="info" :midSize="parseInt(filter.per_page/2)"
                        @paginate="fetchResults" :first_load="firstLoad"></pagination>


        </div>
        <div v-if="results.length === 0 && firstLoad" style="background: #ff6b6a; color: white; padding: 20px">
            {{ $utils.t__('general', 'no_data_available') }}
        </div>
    </div>
</template>

<script>
    import Pagination from '../../components/pagination'
    import Loader from '../../components/loader'
    export default {
        name: "DetailedProductPrice",
        props: [
            'categories',
            'products'
        ],
        components: {
            Pagination, Loader
        },
        data: function () {
            return {
                baseurl: baseurl,
                isLoading: false,
                fullPage: true,

                results: [],
                pagination: {},
                info: {},
                firstLoad: false,

                filter: {
                    search: '',
                    per_page: 10,
                    category_id: '',
                    product_id: '',
                    columnName: 'percentage',
                    order: 'ASC'
                },

            }
        },
        mounted: function () {
            this.fetchResults();

        },

        computed: {
            filteredProducts() {
                return this.products.filter(product => {
                    if (parseInt(product.category_id) === parseInt(this.filter.category_id)) {
                        return product;
                    }
                    return false;
                });
            }
        },

        methods: {
            fetchResults: function (page_url, queryString) {
                var statistics = this.$utils.t__('routes', 'statistics');
                var app = this;
                this.isLoading = true;
                if (queryString) {
                    page_url = baseurl + '/' + statistics + '/detailed-product-price-report-data/' + queryString;
                } else {
                    page_url = page_url || baseurl + '/' + statistics + '/detailed-product-price-report-data';
                }

                axios.get(page_url)
                    .then(function (response) {
                        if (app.filter.per_page !== '*') {
                            app.results = response.data.data;
                            app.makePagination(response.data);
                        } else {
                            app.results = response.data
                        }

                        app.firstLoad = true;
                        app.isLoading = false;

                        setTimeout(function () {
                            alterClass();
                            var rows = $('.table th').length;
                            var columns = $('.table tr').length;
                            shapeTable(rows, columns);
                        }, 200)
                    })
                    .catch(function (error) {
                        console.log(error)
                        app.isLoading = false
                    }.bind(this));

            },

            makePagination: function (data) {

                this.pagination = {
                    path: data.path,
                    current_page: data.current_page,
                    last_page: data.last_page,
                    next_page_url: data.next_page_url,
                    prev_page_url: data.prev_page_url

                };
                this.info = {
                    total: data.total,
                    to: data.to,
                    from: data.from
                }
            },

            filterResult: function () {

                var queryString = '?per_page=' + this.filter.per_page +
                    '&category_id=' + this.filter.category_id +
                    '&product_id=' + this.filter.product_id +
                    '&search=' + this.filter.search;

                this.fetchResults(null, queryString);
            },

            getProductName(productName) {
                let windowWidth = $(window).width();
                if (windowWidth > 1366) {
                    return productName
                } else {
                    return productName.length > 20 ? productName.substr(0, 18) + '...' : productName;
                }
            },

            getClassName(value) {
                if (value !== null && value > 0) {
                    return 'label increase';
                } else if (value !== null && value < 0) {
                    return 'label decrease';
                } else {
                    return null;
                }
            },
            formattedDate(date) {
                let dateArr = date.split(' ')[0].split('-');
                return dateArr[2] + '.' + dateArr[1] + '.' + dateArr[0];
            }
        }
    }
</script>

<style scoped>
    a:hover strong.underline-on-hover {
        -webkit-text-fill-color: #ff4d6a;
        text-decoration: underline;
        cursor: pointer;
        font-weight: 600;
    }

    .table-responsive .loader {
        position: absolute;
        left: 40%;
        top: 40%;
    }

    .mobile-responsive-v1 > tbody > tr > td:before {
        text-align: left !important;
    }

    .mobile-responsive-v1 > tbody > tr > td {
        text-align: right !important;
    }
</style>
